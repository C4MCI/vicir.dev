{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Project Documentations","text":"<p>Here I share detailed information about my project from installation instructions to professional use tips.</p>"},{"location":"#navigation-tab-on-left","title":"Navigation Tab on Left","text":"<p>Use the tab on left side to easily access all docs. You can also see the about page if you want know more about me.</p>"},{"location":"#table-of-contents-are-also-there","title":"Table of Contents Are Also There","text":"<p>Table of contents menu will appear after you click on any project and will follow your reading.</p>"},{"location":"#too-bright","title":"Too Bright?","text":"<p>My fellow nocturnal friends, please use the button next to the search bar to toggle dark mode. It might be already optimized to your browser's theme.</p>"},{"location":"#have-fun","title":"Have Fun!","text":""},{"location":"about/","title":"About","text":""},{"location":"about/#semih-vicir","title":"Semih Vicir","text":"<p>Data Scientist</p> <p>Age: 21</p> <p>Email: semihvicir@semihvicir.live</p>"},{"location":"about/#hi","title":"Hi!","text":"<p>I\u2019m Semih Vicir. I am a creative, hard-working, and self-motivated team player. I am passionate about software development and programming. I am interested in Data Science, Machine Learning, and Deep Learning. I also have experience in Full Stack Development and Cloud.</p>"},{"location":"about/#socials","title":"Socials","text":""},{"location":"about/#more","title":"More","text":"<p>You can use above badge to reach out my GitHub Profile. I really enjoy using applications I wrote. If you do so and want to see more features or report a bug please feel free to reach me over Twitter or LinkedIn. You can also fork the projects and improve them as you like.</p>"},{"location":"baurov/","title":"BAUROV DOK\u00dcMAN","text":""},{"location":"baurov/#jetsonu-vnc-viewera-baglama","title":"Jetson'u VNC Viewer'a Ba\u011flama","text":"<ul> <li>Ethernet kablosunu ba\u011fla</li> <li> <p>A\u011f ayarlar\u0131ndan Alt A\u011f Maskesi'ni (Subnet) 255.255.255.0 yap. Detayl\u0131 anlat\u0131m:</p> <ul> <li> <p>Windows i\u00e7in Ayarlar -&gt; A\u011f ve Internet -&gt; Geli\u015fmi\u015f A\u011f Ayarlar\u0131 -&gt; Di\u011fer a\u011f ba\u011fda\u015ft\u0131r\u0131c\u0131 se\u00e7enekleri -&gt; Sol men\u00fcden Ba\u011fda\u015ft\u0131r\u0131c\u0131 ayarlar\u0131n\u0131 de\u011fi\u015ftirin -&gt; Ba\u011fl\u0131 olan Ethernet s\u00fcr\u00fcc\u00fcs\u00fcne sa\u011f t\u0131k -&gt; \u00d6zellikler -&gt; IPv4 Ayarlar\u0131n\u0131 de\u011fi\u015ftir -&gt; Ip adresi i\u00e7in bir adres salla 192.168.1.119 gibi -&gt; Alt A\u011f Maskesi 255.255.255.0 -&gt; Gateway 192.168.1.1 -&gt; DNS olarak 8.8.8.8, 8.8.4.4 kullan\u0131labilir.</p> </li> <li> <p>Linux (Gnome) i\u00e7in Settings -&gt; Network -&gt; Wired K\u0131sm\u0131ndaki \u00c7arka t\u0131kla -&gt; IPv4 -&gt; Manual se\u00e7ip Windowstaki de\u011ferlerle ayn\u0131 de\u011ferleri giriyoruz.</p> </li> </ul> </li> <li> <p>VNC Viewer'dan baurov.local'e ba\u011flan.</p> <ul> <li>baurov.local \u00e7al\u0131\u015fmazsa 192.168.1.180'e ba\u011flanmay\u0131 dene</li> </ul> </li> </ul>"},{"location":"baurov/#servo-kontrol","title":"Servo Kontrol","text":"<ul> <li> <p>Pixhawk \u00fczerindeki aux pinoutlar\u0131 servo ve r\u00f6leler i\u00e7in ayr\u0131lm\u0131\u015ft\u0131r. 6 adet aux pini bulunmaktad\u0131r ve BRD_PWM_COUNT parametresine g\u00f6re giri\u015f - \u00e7\u0131k\u0131\u015f veya pwm sinyali oldu\u011funa karar verilir. A\u015fa\u011f\u0131daki tabloda detayl\u0131 olarak g\u00f6rebilirsiniz.</p> BRD_PWM_COUNT    Aux pin configuration 1 2 3 4 5 6 0 GPIO GPIO GPIO GPIO GPIO GPIO 2 PWM PWM GPIO GPIO GPIO GPIO 4 (default) PWM PWM PWM PWM GPIO GPIO 6 PWM PWM PWM PWM PWM PWM <li> <p>Parametreler k\u0131sm\u0131ndan SERVOn_FUNCTION (n k\u0131sm\u0131 servo numaras\u0131d\u0131r.) 0 yani kapal\u0131 olmal\u0131d\u0131r. Aksi taktirde baz\u0131 fonksiyonlarla \u00e7ak\u0131\u015fma yapabilir.</p> </li> <li> <p>Servo kanallar\u0131n\u0131n Pixhawk \u00e7\u0131k\u0131\u015flar\u0131 ile e\u015fle\u015fmesini a\u015fa\u011f\u0131daki tabloda g\u00f6rebilirsiniz.</p> Pixhawk Label Servo Channel Main 1 1 Main 2 2 Main 3 3 Main 4 4 Main 5 5 Main 6 6 Main 7 7 Main 8 8 Aux 1 9 Aux 2 10 Aux 3 11 Aux 4 12 Aux 5 13 Aux 6 14 </li>"},{"location":"cambot/","title":"CAMBOT","text":"<p>Hi! Welcome to the official repository of CAMBOT.</p>"},{"location":"cambot/#what-is-cambot","title":"What is CAMBOT?","text":"<p>CAMBOT is a Discord bot specialized for Turkish Discord Community. Most of the commands (except music commands) are in Turkish language. You can do plenty of things from playing music to reviewing the economical status of Turkey using CAMBOT.</p>"},{"location":"cambot/#how-to-use","title":"How To Use?","text":"<p>You can download the files and host the bot yourself by double clicking the launcher.py. But you should create a file named \".env\" first. You will need a Discord bot token, sporify client id and client secret, genius access token and a youtube api key. Open the .env file with notepad and add your tokens. Your .env file should look like this:  </p> <p>TOKEN=\"YOUR_DISCORD_TOKEN_HERE\" SPOTIPY_CLIENT_ID=\"YOUR_SPOTIFY_CLIENT_ID_HERE\" SPOTIPY_CLIENT_SECRET=\"YOUR_SPOTIFY_CLIENT_SECRET_HERE\" GENIUS_ACCESS_TOKEN=\"YOUR_GENIUS_ACCES_TOKEN_HERE\" YOUTUBE_API_KEY=\"YOUR_YOUTUBE_API_KEY_HERE\"  </p> <p>If you don't want to deal with all of this stuff, you can always add CAMBOT to your server by clicking this link. I am doing my best to keep CAMBOT online all the time but it seems impossible without paying for host. But I will take care of it sometime so just enjoy.</p> <p></p>"},{"location":"cambot/#commands","title":"Commands","text":"<p>This is going to be a long session that I explain all commands of CAMBOT. You might consider skipping that part.</p>"},{"location":"cambot/#music-commands","title":"Music Commands","text":"<ul> <li>connect (aliases = [join]) --&gt; Connects to the voice channel that you are connected to and does nothing.  </li> <li>disconnect (aliases = [dc, leave, l]) --&gt; Disconnects from the voice channel.  </li> <li>pause (aliases = [wait]) --&gt; Pauses the current track.  </li> <li>resume (no aliases) --&gt; Resumes the current track.  </li> <li>play(aliases = [p]) --&gt; Plays a song from the given text, Youtube link, or Spotify link.</li> <li>chooseplay (alises = [cp]) --&gt; Plays a song from the given text, Youtube link, or Spotify link. When you search a song by giving a text for search (example usage: .play reloading my mind), CAMBOT shows 5 results for you to choose from. You can easily choose your song by clicking the reactions that CAMBOT adds. You can also use the play command instead of the resume command for resuming the current track. You can also play Spotify or Youtube playlists using the play command. Of course, you do not need to choose songs if you play a playlist. CAMBOT will create a queue that you can easily jump into songs or shuffle them. We will see when we get to these commands.</li> <li>queue (aliases = [q]) --&gt; Shows the playing queue. You can navigate forward and backward in the queue by clicking the reactions that CAMBOT adds.</li> <li>stop (no  aliases) --&gt; Clears the queue and stops playing.</li> <li>next (aliases = [skip]) --&gt; Skips to the next track in the queue. Keeps playing if there is no track in the queue.</li> <li>previous (aliases = [back]) --&gt; Plays the previous song in the queue.</li> <li>shuffle (no aliases) --&gt; Shuffles the upcoming tracks. Does not shuffle the previous ones.</li> <li>repeat (aliases = [loop]) --&gt; There are 2 repeat modes. These are called \"1\" and \"all\". If you use the \"1\" mode (example usage: .repeat 1) it loops only the current playing song. If you use \"all\" mode (example usage: .repeat all or .repeat) it will loop the queue. If you don't specify the repeat mode it will work on \"1\" mode.</li> <li>autoplay (aliases = [ap, auto]) --&gt; There are 3 situations while using the autoplay command. If you use it barely while CAMBOT is not connected to the voice channel or not playing a song (example usage: .autoplay), it will start to play completely random songs from different genres. If you use it by giving it a genre (example usage: .play turkish pop) it will play random songs from the given genre. If you use it while playing a song, it will play similar songs to the current playing song after the current song.</li> <li>jump (aliases = [skipto]) --&gt; Jumps to the song in the queue by the given number (example usage: .jump 6). You can see the numbers of songs using the queue command.</li> <li>playnext (aliases = [playnext]) --&gt; Works similarly to the play command. The only difference is, chosen song or given playlist using playnext command, queues directly to the next song of the queue.</li> <li>lyrics (aliases = [ly]) --&gt; If you use this command while playing a song (example usage: .lyrics), it will show the lyrics of the current playing song. If you use it by giving song name and artist name (example usage: .lyrics blank space, taylor swift), CAMBOT will search for the given song and show the lyrics of it. You can also use it by just giving the name of the song. Just don't forget to use a comma after the song name (example usage: .lyrics blank space,). This command uses Genius.com API.</li> </ul>"},{"location":"cambot/#fun-commands","title":"Fun Commands","text":"<p>If you are not Turkish, you probably won't understand these jokes about economics in Turkey. So don't mind.</p> <ul> <li>kedi (no aliases) --&gt; Posts a random cat photo.  </li> <li>dolar (no aliases) --&gt; Shows the USD/TRY exchange rate.</li> <li>euro (no aliases) --&gt; Shows the EUR/TRY exhange rate.</li> <li>alt\u0131n (no aliases --&gt; Shows the price of 1 gr gold in Turkish Lira.</li> <li>akp (no aliases) --&gt; Shows the improvement of Turkey in the last 20 years XD.</li> <li>2023 (no aliases) --&gt; Shows Turkey's enormously extreme and gigantically big power in the year 2023.</li> </ul>"},{"location":"cambot/#personal-commands","title":"Personal Commands","text":"<p>These are the commands that I use with my friends. There are some inside jokes with these commands so don't mind if you don't understand.</p> <ul> <li>meliht\u00fcrk\u00e7e (aliases = [mt]) --&gt; Plays the Melih Civan's special Turkish playlist.</li> <li>semiht\u00fcrk\u00e7e (aliases = [st]) --&gt; Plays the Semih Vicir's special Turkish playlist.</li> <li>furkansavar (no aliases) --&gt; This command will only work if Furkan Toprak is online. Only use this command if you want to enrage Furkan Toprak.</li> <li>tft (no aliases) --&gt; This command will call specific people to come to play Teamfight Tactics.</li> </ul>"},{"location":"cambot/#contact","title":"Contact","text":"<p>If you find any bugs or if you have any command requests, you can always contact me via my Twitter account. Feel free to ask anything.</p>"},{"location":"cambot/#credits","title":"Credits","text":"<p>Basic structure of this bot made by following Carberra Tutorials's videos. You might want to take a look at his channel if you are interested in coding. I used ZipBomb's repository to get random songs by genre using Spotify API.  </p> <p>Project licensed under the MIT License.</p>"},{"location":"linux/","title":"Personal Notes For Linux Recovery","text":""},{"location":"linux/#recover-grub-from-live-image","title":"Recover Grub from Live Image","text":"<pre><code>$ # Use Live CD to boot\n$ sudo su # Switch to root\n$ fdisk -l # Get names of root, boot &amp; EFI partition names. you can also use blkid\n$ mount /dev/mapper/fedora_localhost--live-root /mnt  # mount root partition\n$ cat /mnt/etc/fedora-release\nFedora release 31 (Thirty One)\n$ mount /dev/nvme0n1p2 /mnt/boot  # mount boot partition\n$ mount /dev/nvme0n1p1 /mnt/boot/efi  # mount EFI partition\n# Note: If you are not able to mount EFI partition ('Input/Output error'),\n# You may have to repair ESP file system or format ESP.\n# fsck.vfat /dev/nvme0n1p1\n# mkfs.vfat /dev/nvme0n1p1 \n# If formatted then we may have to update UUID at /etc/fstab\n$ ls /mnt/boot/efi # should show all OS names under EFI\n\n$ # mount the virtual filesystems that the system uses to communicate with processes and devices\n$ for dir in /dev /proc /sys /run; do mount --bind $dir /mnt/$dir ; done\n\n$ # enter chroot\n$ chroot /mnt\n\n$ # Now you can do all the work e.g. fix grub\n$ dnf reinstall grub2-efi shim -y\n$ grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg # Regenerate grub2\n\n$ # Check /etc/fstab UUID, update if necessary [Hint: lsblk -f would show partition UUIDs]\n\n$ # All things done; now exit from chroot\n$ exit\n\n$ # Check BIOS boot details [ Note: this command won't work if you are inside chroot. ]\n$ efibootmgr -v\n$ # In case you need to create new entry in BIOS\n$ efibootmgr -c -d /dev/nvme0n1p1 -p 1 -L Fedora -l '\\EFI\\fedora\\grubx64.efi' # or, shimx64.efi\n$ # To delete entry from efibootmgr use: efibootmgr -b &lt;#entry&gt; -B\n$ # Copy grubx64.efi from Live USB, if required\n$ cp -p /boot/efi/EFI/grubx64.efi /mnt/boot/efi/EFI/fedora \n\n$ exit\n$ # Now you can reboot\n</code></pre>"},{"location":"navida/","title":"Navida Yaz\u0131l\u0131m Doc","text":""},{"location":"navida/#ros2-kurulumu","title":"Ros2 Kurulumu","text":"<pre><code>https://docs.ros.org/en/humble/Installation/Ubuntu-Install-Debs.html\n</code></pre>"},{"location":"navida/#gazebo-garden-kurulumu","title":"Gazebo Garden Kurulumu","text":"<pre><code>https://gazebosim.org/docs/garden/install_ubuntu/\n</code></pre>"},{"location":"navida/#mavros-kurulumu","title":"Mavros Kurulumu","text":"<p>https://github.com/mavlink/mavros/blob/ros2/mavros/README.md</p> <pre><code>sudo apt install ros-humble-mavros\nros2 run mavros install_geographiclib_datasets.sh\n</code></pre>"},{"location":"navida/#ardupilot-kurulumu","title":"Ardupilot Kurulumu","text":"<p>https://ardupilot.org/dev/docs/building-setup-linux.html#building-setup-linux https://ardupilot.org/dev/docs/setting-up-sitl-on-linux.html</p> <pre><code>git clone --recurse-submodules https://github.com/ArduPilot/ardupilot.git\ncd ardupilot\nTools/environment_install/install-prereqs-ubuntu.sh -y\n. ~/.profile\n</code></pre> <p>Now from the ardupilot directory we just created start the simulation once to finish its setup, you can close it afterwards.</p> <pre><code>cd ArduCopter\nsim_vehicle.py --console --map -w\n</code></pre>"},{"location":"navida/#colcon-workspacei-ayaga-kaldrma","title":"Colcon Workspace'i Aya\u011fa Kald\u0131rma","text":"<ol> <li> <p>Workspace'i klonla.</p> <pre><code>git clone https://github.com/Navi-IDA/ros2-ws.git \n</code></pre> <p>veya ssh keyin varsa </p> <pre><code>git clone git@github.com:Navi-IDA/ros2-ws.git\n</code></pre> </li> <li> <p>ZED SDK ve ROS Wrapper kurulumu.</p> <p>Bu ad\u0131m\u0131 sadece ger\u00e7ek ara\u00e7ta kurulum yaparken yapmam\u0131z gerekiyor, simulasyonda i\u00e7in ger\u00e7ek zed kullan\u0131lmad\u0131\u011f\u0131 i\u00e7in bu ad\u0131m atlanabilir. E\u011fer simulasyon i\u00e7in kurulum yap\u0131yorsan\u0131z src/zed_ros2_examples ve src/zed-ros2-wrapper dosyalar\u0131n\u0131 localinizden silin. Ancak Gite pushlarken bu sildi\u011finiz dosyalar\u0131 commitlemeyin, sadece di\u011fer de\u011fi\u015ftirdi\u011finiz dosyalar\u0131 stage edip commitleyin.</p> <p>https://www.stereolabs.com/docs/ros2</p> </li> <li> <p>Colconu buildle ve sourcela.</p> <pre><code>sudo apt install python3-sdformat13 ros-humble-ros-gzgarden ros-humble-xacro\ncd ros2-ws\ngit checkout -b develop\npip3 install -r src/yolo_ros/requirements.txt\nrosdep install --from-paths src --ignore-src -r -y\ncolcon build --merge-install --cmake-args=-DCMAKE_BUILD_TYPE=Release\nsource install/setup.bash\n</code></pre> <p>--cmake-args k\u0131sm\u0131n\u0131 sadece cmake buildlerken verseniz yeterli. H\u0131zl\u0131 build almak i\u00e7in bir kere yapt\u0131ktan sonra kullanmayabilirsiniz.</p> </li> </ol>"},{"location":"navida/#ardupilot_gazebo-plugini","title":"Ardupilot_gazebo Plugini","text":"<p>https://github.com/ArduPilot/ardupilot_gazebo</p> <pre><code>sudo apt update\nsudo apt install libgz-sim7-dev rapidjson-dev\nsudo apt install libopencv-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-bad gstreamer1.0-libav gstreamer1.0-gl\n</code></pre> <pre><code>export GZ_VERSION=garden\nsudo bash -c 'wget https://raw.githubusercontent.com/osrf/osrf-rosdep/master/gz/00-gazebo.list -O /etc/ros/rosdep/sources.list.d/00-gazebo.list'\nrosdep update\nrosdep resolve gz-garden\n# Navigate to your ROS workspace before the next command.\nrosdep install --from-paths src --ignore-src -y\n</code></pre> <pre><code>cd ~/\ngit clone https://github.com/ArduPilot/ardupilot_gazebo\ncd ardupilot_gazebo\nmkdir build &amp;&amp; cd build\ncmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo\nmake -j4\n</code></pre> <pre><code>export GZ_SIM_SYSTEM_PLUGIN_PATH=$HOME/ardupilot_gazebo/build:$GZ_SIM_SYSTEM_PLUGIN_PATH\nexport GZ_SIM_RESOURCE_PATH=$HOME/ardupilot_gazebo/models:$HOME/ardupilot_gazebo/worlds:$GZ_SIM_RESOURCE_PATH\necho 'export GZ_SIM_SYSTEM_PLUGIN_PATH=$HOME/ardupilot_gazebo/build:${GZ_SIM_SYSTEM_PLUGIN_PATH}' &gt;&gt; ~/.bashrc\necho 'export GZ_SIM_RESOURCE_PATH=$HOME/ardupilot_gazebo/models:$HOME/ardupilot_gazebo/worlds:${GZ_SIM_RESOURCE_PATH}' &gt;&gt; ~/.bashrc\nsource ~/.bashrc \n</code></pre>"},{"location":"navida/#mavros-yaml","title":"Mavros Yaml","text":"<p>/opt/ros/humble/share/mavros/apm_config.yaml dosyas\u0131n\u0131 bunla de\u011fi\u015ftir.</p> <pre><code># Common configuration for APM2 autopilot\n#\n/**:\n  ros__parameters:\n    startup_px4_usb_quirk: false\n\n# --- system plugins ---\n\n# sys_status\n/**/sys:\n  ros__parameters:\n    min_voltage: [10.0]   # diagnostics min voltage, use a vector i.e. [16.2, 16.0] for multiple batteries, up-to 10 are supported\n                          # to achieve the same on a ROS launch file do: &lt;rosparam param=\"sys/min_voltage\"&gt;[16.2, 16.0]&lt;/rosparam&gt;\n    disable_diag: false   # disable all sys_status diagnostics, except heartbeat\n    heartbeat_rate: 1.0   # send heartbeat rate in Hertz\n    heartbeat_mav_type: \"ONBOARD_CONTROLLER\"\n    conn_timeout: 10.0    # heartbeat timeout in seconds\n\n# sys_time\n/**/time:\n  ros__parameters:\n    time_ref_source: \"fcu\"    # time_reference source\n    timesync_mode: MAVLINK\n    timesync_avg_alpha: 0.6   # timesync averaging factor\n    timesync_rate: 10.0       # TIMESYNC rate in Hertz (feature disabled if 0.0)\n    system_time_rate: 1.0     # send system time to FCU rate in Hertz (disabled if 0.0)\n\n# --- mavros plugins (alphabetical order) ---\n\n# 3dr_radio\n/**/tdr_radio:\n  ros__parameters:\n    low_rssi: 40  # raw rssi lower level for diagnostics\n\n# actuator_control\n# None\n\n# command\n/**/cmd:\n  ros__parameters:\n    use_comp_id_system_control: false   # quirk for some old FCUs\n\n# dummy\n# None\n\n# ftp\n# None\n\n# global_position\n/**/global_position:\n  ros__parameters:\n    frame_id: \"map\"               # origin frame\n    child_frame_id: \"base_link\"   # body-fixed frame\n    rot_covariance: 99999.0       # covariance for attitude?\n    gps_uere: 1.0                 # User Equivalent Range Error (UERE) of GPS sensor (m)\n    use_relative_alt: true        # use relative altitude for local coordinates\n    tf.send: false                # send TF?\n    tf.frame_id: \"map\"            # TF frame_id\n    tf.global_frame_id: \"earth\"   # TF earth frame_id\n    tf.child_frame_id: \"base_link\"  # TF child_frame_id\n\n# imu_pub\n/**/imu:\n  ros__parameters:\n    frame_id: \"wamv/wamv/base_link\"\n    # need find actual values\n    linear_acceleration_stdev: 0.0003\n    angular_velocity_stdev: 0.0003490659  # 0.02 degrees\n    orientation_stdev: 1.0\n    magnetic_stdev: 0.0\n\n# local_position\n/**/local_position:\n  ros__parameters:\n    frame_id: \"map\"\n    tf.send: true\n    tf.frame_id: \"map\"\n    tf.child_frame_id: \"wamv/wamv/base_link\"\n    tf.send_fcu: false\n\n# param\n# None, used for FCU params\n\n# rc_io\n# None\n\n# setpoint_accel\n/**/setpoint_accel:\n  ros__parameters:\n    send_force: false\n\n# setpoint_attitude\n/**/setpoint_attitude:\n  ros__parameters:\n    reverse_thrust: false       # allow reversed thrust\n    use_quaternion: false       # enable PoseStamped topic subscriber\n    tf.listen: false            # enable tf listener (disable topic subscribers)\n    tf.frame_id: \"map\"\n    tf.child_frame_id: \"target_attitude\"\n    tf.rate_limit: 50.0\n\n# setpoint_raw\n/**/setpoint_raw:\n  ros__parameters:\n    thrust_scaling: 1.0         # specify thrust scaling (normalized, 0 to 1) for thrust (like PX4)\n\n# setpoint_position\n/**/setpoint_position:\n  ros__parameters:\n    tf.listen: false            # enable tf listener (disable topic subscribers)\n    tf.frame_id: \"map\"\n    tf.child_frame_id: \"target_position\"\n    tf.rate_limit: 50.0\n    mav_frame: LOCAL_NED\n\n# guided_target\n/**/guided_target:\n  ros__parameters:\n    tf.listen: false           # enable tf listener (disable topic subscribers)\n    tf.frame_id: \"map\"\n    tf.child_frame_id: \"target_position\"\n    tf.rate_limit: 50.0\n\n# setpoint_velocity\n/**/setpoint_velocity:\n  ros__parameters:\n    mav_frame: LOCAL_NED\n\n# vfr_hud\n# None\n\n# waypoint\n/**/mission:\n  ros__parameters:\n    pull_after_gcs: true        # update mission if gcs updates\n    use_mission_item_int: true  # use the MISSION_ITEM_INT message instead of MISSION_ITEM\n                                # for uploading waypoints to FCU\n\n# --- mavros extras plugins (same order) ---\n\n# adsb\n# None\n\n# debug_value\n# None\n\n# distance_sensor\n## Currently available orientations:\n#    Check http://wiki.ros.org/mavros/Enumerations\n##\n/**/distance_sensor:\n  ros__parameters:\n    config: |\n      rangefinder_pub:\n        id: 0\n        frame_id: \"lidar\"\n        # orientation: PITCH_270  # sended by FCU\n        field_of_view: 0.0        # XXX TODO\n        send_tf: false\n        sensor_position: {x:  0.0, y:  0.0, z:  -0.1}\n      rangefinder_sub:\n        subscriber: true\n        id: 1\n        orientation: PITCH_270  # only that orientation are supported by APM 3.4+\n\n# image_pub\n/**/image:\n  ros__parameters:\n    frame_id: \"px4flow\"\n\n# fake_gps\n/**/fake_gps:\n  ros__parameters:\n    # select data source\n    use_mocap: true               # ~mocap/pose\n    mocap_transform: false        # ~mocap/tf instead of pose\n    mocap_withcovariance: false   # ~mocap/pose uses PoseWithCovarianceStamped Message\n    use_vision: false             # ~vision (pose)\n    use_hil_gps: true\n    gps_id: 4\n    # origin (default: Z\u00fcrich)\n    geo_origin.lat: 47.3667       # latitude [degrees]\n    geo_origin.lon: 8.5500        # longitude [degrees]\n    geo_origin.alt: 408.0         # altitude (height over the WGS-84 ellipsoid) [meters]\n    eph: 2.0\n    epv: 2.0\n    horiz_accuracy: 0.5\n    vert_accuracy: 0.5\n    speed_accuracy: 0.0\n    satellites_visible: 6     # virtual number of visible satellites\n    fix_type: 3               # type of GPS fix (default: 3D)\n    tf.listen: false\n    tf.send: false            # send TF?\n    tf.frame_id: \"map\"        # TF frame_id\n    tf.child_frame_id: \"fix\"  # TF child_frame_id\n    tf.rate_limit: 10.0       # TF rate\n    gps_rate: 5.0             # GPS data publishing rate\n\n# landing_target\n/**/landing_target:\n  ros__parameters:\n    listen_lt: false\n    mav_frame: \"LOCAL_NED\"\n    land_target_type: \"VISION_FIDUCIAL\"\n    image.width: 640              # [pixels]\n    image.height: 480\n    camera.fov_x: 2.0071286398    # default: 115 [degrees]\n    camera.fov_y: 2.0071286398\n    tf.send: true\n    tf.listen: false\n    tf.frame_id: \"landing_target\"\n    tf.child_frame_id: \"camera_center\"\n    tf.rate_limit: 10.0\n    target_size: {x: 0.3, y: 0.3}\n\n# mocap_pose_estimate\n/**/mocap:\n  ros__parameters:\n    # select mocap source\n    use_tf: false   # ~mocap/tf\n    use_pose: true  # ~mocap/pose\n\n# mount_control\n/**/mount:\n  ros__parameters:\n    debounce_s: 4.0\n    err_threshold_deg: 10.0\n    negate_measured_roll: false\n    negate_measured_pitch: false\n    negate_measured_yaw: false\n\n# odom\n/**/odometry:\n  ros__parameters:\n    fcu.odom_parent_id_des: \"map\"   # desired parent frame rotation of the FCU's odometry\n    fcu.odom_child_id_des: \"map\"    # desired child frame rotation of the FCU's odometry\n\n# px4flow\n/**/px4flow:\n  ros__parameters:\n    frame_id: \"px4flow\"\n    ranger_fov: 0.118682      # 6.8 degrees at 5 meters, 31 degrees at 1 meter\n    ranger_min_range: 0.3     # meters\n    ranger_max_range: 5.0     # meters\n\n# vision_pose_estimate\n/**/vision_pose:\n  ros__parameters:\n    tf.listen: false           # enable tf listener (disable topic subscribers)\n    tf.frame_id: \"map\"\n    tf.child_frame_id: \"vision_estimate\"\n    tf.rate_limit: 10.0\n\n# vision_speed_estimate\n/**/vision_speed:\n  ros__parameters:\n    listen_twist: true    # enable listen to twist topic, else listen to vec3d topic\n    twist_cov: true       # enable listen to twist with covariance topic\n\n# vibration\n/**/vibration:\n  ros__parameters:\n    frame_id: \"base_link\"\n\n# wheel_odometry\n/**/wheel_odometry:\n  ros__parameters:\n    count: 2                      # number of wheels to compute odometry\n    use_rpm: false                # use wheel's RPM instead of cumulative distance to compute odometry\n    wheel0: {x: 0.0, y: -0.15, radius: 0.05}  # x-, y-offset (m,NED) and radius (m)\n    wheel1: {x: 0.0, y:  0.15, radius: 0.05}  # x-, y-offset (m,NED) and radius (m)\n    send_raw: true                # send wheel's RPM and cumulative distance (~/wheel_odometry/rpm, ~/wheel_odometry/distance)\n    send_twist: false             # send geometry_msgs/TwistWithCovarianceStamped instead of nav_msgs/Odometry\n    frame_id: \"map\"               # origin frame\n    child_frame_id: \"base_link\"   # body-fixed frame\n    vel_error: 0.1                # wheel velocity measurement error 1-std (m/s)\n    tf.send: true\n    tf.frame_id: \"map\"\n    tf.child_frame_id: \"base_link\"\n\n# camera\n/**/camera:\n  ros__parameters:\n    frame_id: \"base_link\"\n</code></pre>"},{"location":"navida/#vrx-sim","title":"Vrx Sim","text":"<pre><code>ros2 launch vrx_gz njord.launch.py world:=sydney_regatta\n</code></pre>"},{"location":"navida/#ardupilot","title":"Ardupilot","text":"<pre><code>sim_vehicle.py -v Rover -f rover-skid --model JSON  --console --map --custom-location='-33.724223,150.679736,0.0,0.0'\n</code></pre>"},{"location":"navida/#mavros","title":"Mavros","text":"<pre><code>ros2 launch mavros apm.launch fcu_url:=udp://:14550@127.0.0.1:14555\n</code></pre>"},{"location":"navida/#nav2","title":"NAV2","text":"<pre><code>ros2 launch my_nav2_node gps_waypoint_follower.launch.py\n</code></pre>"},{"location":"navida/#whatsapp-kodu","title":"Whatsapp kodu","text":"<pre><code>ros2 run topic_tools relay /cmd_vel /mavros/setpoint_velocity/cmd_vel_unstamped\n</code></pre>"},{"location":"navida/#yolo-position-publisher-occupancy-grid","title":"Yolo, Position Publisher, Occupancy Grid....","text":"<pre><code>ros2 launch central_launch_pkg multi_package_launch.py\n</code></pre>"},{"location":"navida/#gps-waypoint-to-local-waypoint-transformer","title":"Gps Waypoint to Local Waypoint Transformer","text":"<pre><code>ros2 run gps_position_transformer transformer\n</code></pre>"},{"location":"playstore/","title":"Playstore","text":"<p>adssasadsadsa</p>"},{"location":"playstore/#installation","title":"Installation","text":"<p>dsadsadasdsadsad</p>"},{"location":"playstore/#how-to","title":"How to","text":"<p>sadsadsadad</p>"}]}